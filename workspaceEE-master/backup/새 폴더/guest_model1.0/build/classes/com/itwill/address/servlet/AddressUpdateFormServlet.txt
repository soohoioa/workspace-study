package com.itwill.address.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.itwill.address.Address;
import com.itwill.address.AddressService;

/**
 * Servlet implementation class AddressUpdateFormServlet
 */
@WebServlet("/address_update_form.do")
public class AddressUpdateFormServlet extends HttpServlet {

   @Override
   protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      response.sendRedirect("address_list.do");
   }

   protected void doPost(HttpServletRequest request, HttpServletResponse response)
         throws ServletException, IOException {
      try {
         /*
          요청라인 POST /addressSite/address_update_form.do HTTP/1.1 
          요청헤더 
          요청바디 no=1
          */

         /*
          * 0.요청객체인코딩설정 
            1.파라메타받기(no) 
            2.AddressService객체생성 
            3.받은파라메타로  AddressService.addressDetail(1) 메쏘드호출 
            4.반환받은 Address객체를 사용해서 클라이언트로 응답(수정폼 보여주기)
          */
         request.setCharacterEncoding("UTF-8");       
         String noStr = request.getParameter("no");
         
         if(noStr == null || noStr.equals("")) {
				response.sendRedirect("address_list.do");
				return;
			}
                
         AddressService addressService = new AddressService();
         
         Address findAddress = addressService.addressDetail(Integer.parseInt(noStr));
         
         response.setContentType("text/html;charset=UTF-8");
         PrintWriter out = response.getWriter();
         
         out.println("<!DOCTYPE html>");
         out.println("<html>");
         out.println("<head>");
         out.println("<meta charset='UTF-8'>");
         out.println("<title>Insert title here</title>");
         out.println("</head>");
         out.println("<body>");
         out.println("<h1>["+findAddress.getName() +"님 주소록 수정폼]</h1><hr>");
         out.println("<hr>");
         out.println("   <div>");
         out.println("      <a href='address_main.do'>[메인]</a>");
         out.println("      <a href='address_insert_form.do'>[주소록쓰기폼]</a>");
         out.println("      <a href='address_list.do'>[주소록리스트]</a>");
         out.println("   </div>");
         out.println("   <form method='post' action='address_update_action.do'>");
         out.println("      번호----<input type='hidden' name='no' value='" + noStr + "'><br>");
         out.println("      이름----<input type='text' name='name' value='"+ findAddress.getName() +"'><br>");
         out.println("      전화번호<input type='text' name='phone' value='" + findAddress.getPhone()+ "'><br>");
         out.println("      주소----<input type='text' name='address' value='" + findAddress.getAddress()+ "'><br> ");
         out.println("      <input type='submit' value='주소록수정'>");
         out.println("      <input type='reset' value='주소록수정폼지우기'>");
         out.println("   </form>");
         out.println("</body>");
         out.println("</html>");
         
      } catch (Exception e) {
         e.printStackTrace();
         response.sendRedirect("address_error.html");
         return;
      }
   }

}

------------------------------------

package com.itwill.address.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.itwill.address.Address;
import com.itwill.address.AddressService;

/**
 * Servlet implementation class AddressUpdateFormServlet
 */
@WebServlet("/address_update_form.do")
public class AddressUpdateFormServlet extends HttpServlet {

   @Override
   protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      response.sendRedirect("address_list.do");
   }

   protected void doPost(HttpServletRequest request, HttpServletResponse response)
         throws ServletException, IOException {
      try {
         /*
          요청라인 POST /addressSite/address_update_form.do HTTP/1.1 
          요청헤더 
          요청바디 no=1
          */

         /*
          * 0.요청객체인코딩설정 
            1.파라메타받기(no) 
            2.AddressService객체생성 
            3.받은파라메타로  AddressService.addressDetail(1) 메쏘드호출 
            4.반환받은 Address객체를 사용해서 클라이언트로 응답(수정폼 보여주기)
          */
         request.setCharacterEncoding("UTF-8"); // 0.요청객체인코딩설정   
         String noStr = request.getParameter("no"); // 1.파라메타받기(no)  
         
                
         AddressService addressService = new AddressService(); //  2.AddressService객체생성 
         
         Address address = addressService.addressDetail(Integer.parseInt(noStr));
         // 3.받은파라메타로  AddressService.addressDetail(1) 메쏘드호출 
         
         
         response.setContentType("text/html;charset=UTF-8");
         PrintWriter out = response.getWriter();
         
         out.println("<!DOCTYPE html>");
         out.println("<html>");
         out.println("<head>");
         out.println("<meta charset='UTF-8'>");
         out.println("<title>Insert title here</title>");
         out.println("</head>");
         out.println("<body>");
         out.println("<h1>["+address.getName() +"님 주소록 수정폼]</h1><hr>");
         out.println("<hr>");
         out.println("   <div>");
         out.println("      <a href='address_main.do'>[메인]</a>");
         out.println("      <a href='address_insert_form.do'>[주소록쓰기폼]</a>");
         out.println("      <a href='address_list.do'>[주소록리스트]</a>");
         out.println("   </div>");
         out.println("   <form method='post' action='address_update_action.do'>");
         out.println("      번호----"+noStr+"<input type='hidden' name='no' value='" + noStr + "'><br>");
         // 앞에는 보이는거고 뒤에는 전송하고
         out.println("      이름----<input type='text' name='name' value='"+ address.getName() +"'><br>");
         out.println("      전화번호<input type='text' name='phone' value='" + address.getPhone()+ "'><br>");
         out.println("      주소----<input type='text' name='address' value='" + address.getAddress()+ "'><br> ");
         out.println("      <input type='submit' value='주소록수정'>");
         out.println("      <input type='reset' value='주소록수정폼지우기'>");
         out.println("   </form>");
         out.println("</body>");
         out.println("</html>");
         // 수정시 pk로 넘겨서 pk로 다시 받는다. 데이터를 재활용안한다.
         // 여기서 no가 pk이기 때문에 값이 없으면 수정이 불가능하다.
         
      } catch (Exception e) {
         e.printStackTrace();
         response.sendRedirect("address_error.html");
         return;
      }
   }

}